//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.VfsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VfsService.IVirtualFileSystem")]
    public interface IVirtualFileSystem {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/CreateItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/CreateItemResponse")]
        string CreateItem(string path, string name, bool type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/CreateItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/CreateItemResponse")]
        System.Threading.Tasks.Task<string> CreateItemAsync(string path, string name, bool type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/RemoveItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/RemoveItemResponse")]
        string RemoveItem(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/RemoveItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/RemoveItemResponse")]
        System.Threading.Tasks.Task<string> RemoveItemAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/CopyItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/CopyItemResponse")]
        string CopyItem(string source, string receiver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/CopyItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/CopyItemResponse")]
        System.Threading.Tasks.Task<string> CopyItemAsync(string source, string receiver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/MoveItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/MoveItemResponse")]
        string MoveItem(string source, string receiver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/MoveItem", ReplyAction="http://tempuri.org/IVirtualFileSystem/MoveItemResponse")]
        System.Threading.Tasks.Task<string> MoveItemAsync(string source, string receiver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/ShowItemsInFolder", ReplyAction="http://tempuri.org/IVirtualFileSystem/ShowItemsInFolderResponse")]
        string ShowItemsInFolder(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVirtualFileSystem/ShowItemsInFolder", ReplyAction="http://tempuri.org/IVirtualFileSystem/ShowItemsInFolderResponse")]
        System.Threading.Tasks.Task<string> ShowItemsInFolderAsync(string path);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVirtualFileSystemChannel : Client.VfsService.IVirtualFileSystem, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VirtualFileSystemClient : System.ServiceModel.ClientBase<Client.VfsService.IVirtualFileSystem>, Client.VfsService.IVirtualFileSystem {
        
        public VirtualFileSystemClient() {
        }
        
        public VirtualFileSystemClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VirtualFileSystemClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VirtualFileSystemClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VirtualFileSystemClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CreateItem(string path, string name, bool type) {
            return base.Channel.CreateItem(path, name, type);
        }
        
        public System.Threading.Tasks.Task<string> CreateItemAsync(string path, string name, bool type) {
            return base.Channel.CreateItemAsync(path, name, type);
        }
        
        public string RemoveItem(string path) {
            return base.Channel.RemoveItem(path);
        }
        
        public System.Threading.Tasks.Task<string> RemoveItemAsync(string path) {
            return base.Channel.RemoveItemAsync(path);
        }
        
        public string CopyItem(string source, string receiver) {
            return base.Channel.CopyItem(source, receiver);
        }
        
        public System.Threading.Tasks.Task<string> CopyItemAsync(string source, string receiver) {
            return base.Channel.CopyItemAsync(source, receiver);
        }
        
        public string MoveItem(string source, string receiver) {
            return base.Channel.MoveItem(source, receiver);
        }
        
        public System.Threading.Tasks.Task<string> MoveItemAsync(string source, string receiver) {
            return base.Channel.MoveItemAsync(source, receiver);
        }
        
        public string ShowItemsInFolder(string path) {
            return base.Channel.ShowItemsInFolder(path);
        }
        
        public System.Threading.Tasks.Task<string> ShowItemsInFolderAsync(string path) {
            return base.Channel.ShowItemsInFolderAsync(path);
        }
    }
}
